> Problem: [1306. 跳跃游戏 III](https://leetcode.cn/problems/jump-game-iii/description/)

[TOC]

# 思路

> 发现可以穷举所有情况，考虑爆搜

# 解题方法

> map记录下标是否被访问过，避免重复访问

# 复杂度

时间复杂度:

> O(n)

空间复杂度:

> O(n)

# Code

* []

```C++
class Solution {
public:
    map<int,bool>mapt;
    bool canReach(vector<int>& arr, int start) {
        if(mapt[start]) return false;
        if(start >= arr.size() || start < 0) return false;
        if(arr[start] == 0) return true;
        mapt[start] = true;
        return canReach(arr, start - arr[start]) | canReach(arr,start + arr[start]);
    }
};
```

