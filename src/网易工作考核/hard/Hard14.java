package org.example.hard;

/**
 * 按位与为零的三元组
 * 分数 60
 * 作者 
 * 单位 
 * 给你一个整数数组 nums ，返回其中 按位与三元组 的数目。
 *
 * 按位与三元组 是由下标 (i, j, k) 组成的三元组，并满足下述全部条件：
 *
 * 0 <= i < nums.length
 *
 * 0 <= j < nums.length
 *
 * 0 <= k < nums.length
 *
 * nums[i] & nums[j] & nums[k] == 0 ，其中 & 表示按位与运算符。
 *
 * 提示：
 *
 * 1 <= nums.length <= 1000
 *
 * 0 <= nums[i] < 2^16
 *
 * 注意：时间复杂度是 O(n^3)的算法，会超出时间限制。
 *
 * 输入格式:
 * 整数数组nums，以",”分隔字符串形式作为输入
 *
 * 输出格式:
 * 一个数字，字符串形式
 *
 * 输入样例:
 * 在这里给出一组输入。例如：
 *
 * 2,1,3
 * 输出样例:
 * 在这里给出相应的输出。例如：
 *
 * 12
 */
public class Hard14 {

}
